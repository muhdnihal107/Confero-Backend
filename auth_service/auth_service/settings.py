"""
Django settings for auth_service project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+a0^n%s1nc84lwdl0&ms#=tyt3jb8=t$16)(%+=hie2g81_vdt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*','auth_service', 'auth_service:8000']



# Application definition


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
    'rest_framework.authtoken',
    'accounts',
    # 'social_django',
    
    'django.contrib.sites',  # Required for allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # Add this line
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'auth_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'auth_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'confero_db',
        'USER': 'confero_user',
        'PASSWORD': 'confero_pass',
        'HOST': 'confero_db',  # Matches the service name in docker-compose.yml
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
  # Required for django-allauth

AUTH_USER_MODEL = 'accounts.CustomUser'


# Add to the bottom
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'  # BASE_DIR is already defined

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://localhost:8000",
    "http://localhost:8001",
    "http://localhost:8003",
    "http://auth_service:8000",  # Add this to allow Docker service
    "http://notification_service:8000",
    "http://room_service:8000", 
]
from datetime import timedelta
import os
# auth_service/settings.py
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

SIMPLE_JWT = {
    'TOKEN_OBTAIN_SERIALIZER': 'accounts.serializers.CustomTokenObtainPairSerializer',
    'ACCESS_TOKEN_LIFETIME': timedelta(days=2),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    'SIGNING_KEY': os.getenv('JWT_SIGNING_KEY', 'a-string-secret-at-least-256-bits-long'),
    "AUTH_HEADER_TYPES": ("Bearer",),

}

CORS_ALLOW_CREDENTIALS = True

SITE_ID = 1

# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',
#     'allauth.account.auth_backends.AuthenticationBackend',
# ]

GOOGLE_CLIENT_ID = '1092656538511-9g9vtc7715g4gsm088tjjiac7ksu9ita.apps.googleusercontent.com'  # Replace with your Google Client ID


# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '1092656538511-9g9vtc7715g4gsm088tjjiac7ksu9ita.apps.googleusercontent.com'  # Replace with your Client ID
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'  # Replace with your Client Secret
# SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email', 'profile', 'openid']

# Redirect URLs
LOGIN_REDIRECT_URL = 'http://localhost:5173/'  # Redirect after successful login
LOGOUT_REDIRECT_URL = 'http://localhost:5173/'  # Redirect after logout

# settings.py
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'muhdnihal132@gmail.com'  # Replace with your email
EMAIL_HOST_PASSWORD = 'zpek ublv btdl ffpp' # Use an App Password if using Gmail
DEFAULT_FROM_EMAIL = 'muhdnihal132@gmail.com'


# Add to the bottom of settings.py
RABBITMQ = {
    'HOST': 'rabbitmq',
    'PORT': 5672,
    'USER': 'admin',
    'PASSWORD': 'adminpassword',
    'VHOST': '/',
}